apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-management-frontend
  namespace: resource-management
  labels:
    app: resource-management-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-management-frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: resource-management-frontend
      # annotations:
      #   "weave.works/network-policy": |
      #     {
      #       "ingress": [
      #         { "destination": {"port": 80} }
      #       ]
      #     }
    spec:
      containers:
      - name: frontend
        image: docker.io/g420/resource-management-frontend:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 80
            name: http
          - containerPort: 443
            name: https
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        envFrom:
          - configMapRef:
              name: resource-management-config-fe
        readinessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
          - name: ssl-certs
            mountPath: /etc/nginx/ssl
            readOnly: true
      volumes:
        - name: ssl-certs
          secret:
            secretName: keycloak-tls-manual